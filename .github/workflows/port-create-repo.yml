name: Scaffold a new service
on:
  workflow_dispatch:
    inputs:
      port_context:
        required: true
        description: Includes the action's run id
      service_name:
        required: true
        description: The name of the new service
        type: string
jobs:
  scaffold-service:
    env:
      ORG_NAME: alfredo-pozo
    runs-on: ubuntu-latest
    steps:
      - run: |
          
          curl -s --location --request POST 'https://api.getport.io/v1/auth/access_token' --header 'Content-Type: application/json' --data-raw "{
          \"clientId\": \"${{ secrets.PORT_CLIENT_ID }}\",
          \"clientSecret\": \"${{ secrets.PORT_CLIENT_SECRET }}\"
          }" | jq -r '.accessToken'


          gh repo create ${{ inputs.service_name }} --public --template https://github.com/alfredo-pozo/containerapps-csharp


           curl --location "https://api.getport.io/v1/blueprints/service/entities?run_id=${{ fromJson(inputs.port_context).runId }}" \
          --header "Authorization: Bearer $access_token" \
          --header "Content-Type: application/json" \
          --data "{
            \"identifier\": \"${{ inputs.service_name }}\",
            \"title\": \"${{ inputs.service_name }}\",
            \"properties\": {}
          }"

          
        env:
          GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN }}

      - name: Azure Login
        uses: Azure/login@v2.1.0
        with:
          # ClientId of the Azure Service principal created.
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Azure CLI Action
        uses: Azure/cli@v2.1.0
        with:
          # Specify the script here
          inlineScript: |
            az containerapp up -n ${{ inputs.service_name }}-app --repo https://github.com/alfredo-pozo/${{ inputs.service_name }} --location "East US" --environment env-${{ inputs.service_name }}-app --resource-group rg-${{ inputs.service_name }}-app  --ingress external --token ${{ secrets.ORG_ADMIN_TOKEN }}  --context-path "./src" --sp-cid ${{ secrets. AZURE_CLIENT_ID }} --sp-sec ${{ secrets.AZURE_CLIENT_SECRET }} --sp-tid ${{ secrets.AZURE_TENANT_ID }}
          
