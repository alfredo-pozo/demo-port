name: Scaffold a new service
on:
  workflow_dispatch:
    inputs:
      port_context:
        required: true
        description: Includes the action's run id
      service_name:
        required: true
        description: The name of the new service
        type: string
jobs:
  scaffold-service:
    env:
      ORG_NAME: alfredo-pozo
    runs-on: ubuntu-latest
    steps:
      - run: |
          
          curl --location --request POST "https://sonarcloud.io/api/projects/create?organization=demo-${{ env.ORG_NAME }}&project=${{ inputs.service_name }}&name=${{ inputs.service_name }}&newCodeDefinitionType=days&newCodeDefinitionValue=2" \
          --header "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
          --header "Content-Type: application/json"

          curl --location --request POST "https://sonarcloud.io/api/settings/set?section=params&component=${{ inputs.service_name }}&key=sonar.links.scm&value=https://github.com/${{ env.ORG_NAME }}/${{ inputs.service_name }}" \
          --header "Authorization: Bearer ${{ secrets.SONAR_TOKEN }}" \
          --header "Content-Type: application/json" 
          
        env:
          GH_TOKEN: ${{ secrets.ORG_ADMIN_TOKEN }}

      #- name: Azure Login
      #  uses: Azure/login@v2.1.0
      #  with:
          # ClientId of the Azure Service principal created.
      #    creds: ${{ secrets.AZURE_CREDENTIALS }}

      #- name: Azure CLI Action
      #  uses: Azure/cli@v2.1.0
      #  with:
          # Specify the script here
      #    inlineScript: |
      #      az containerapp up -n ${{ inputs.service_name }}-app --repo https://github.com/alfredo-pozo/${{ inputs.service_name }} --location "East US" --environment env-${{ inputs.service_name }}-app --resource-group rg-${{ inputs.service_name }}-app  --ingress external --token ${{ secrets.ORG_ADMIN_TOKEN }}  --context-path ./src --sp-cid ${{ secrets. AZURE_CLIENT_ID }} --sp-sec ${{ secrets.AZURE_CLIENT_SECRET }} --sp-tid ${{ secrets.AZURE_TENANT_ID }}
          
